from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
import requests
import time



#page = requests.get("http://sportsmodelanalytics.com/member/index.php?page=cbbbacktest",auth = ("sigepalbeta", "Albeta1927"))
#page


table = dict()

driver = webdriver.Chrome()
driver.get("http://sigepalbeta:Albeta1927@sportsmodelanalytics.com/member/index.php?page=cbbbacktest")
#page = driver.page_source

#inputElement = driver.find_element_by_id("min_diff")
#inputElement.send_keys('1')
#inputElement.send_keys(Keys.ENTER)
####################3
# declaring two functions used


def find(driver):
    element = driver.find_elements_by_id("data")
    if element:
        return element
    else:
        return False


def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        pass
 
    try:
        import unicodedata
        unicodedata.numeric(s)
        return True
    except (TypeError, ValueError):
        pass
 
    return False


def scrapeify (*x):
    
    control = float(1.0)
    for control in range(1,7):
        inputElement = driver.find_element_by_id("min_diff")
        inputElement.send_keys(control)
        inputElement.send_keys(Keys.ENTER)
        print("just hit enter")
        inputElement1 = driver.find_element_by_id("min_diff")
        time.sleep(1)
        #inputElement.send_keys("")
        time.sleep(1)
        inputElement1.send_keys(Keys.BACKSPACE)
        print("just hit back")
        page = driver.page_source
        soup = BeautifulSoup(page)
        
        #print(page.status_code)
        #print(list(soup.children))
        
        want = soup.find_all('div', class_='well')[0].get_text()
        
        #print(list(want))
        
        length = len(want)
        
        #print(length)

        won = ""
        x = 0
        for x in range(0,6):
            won  = won + want[x]

        x = x + 1
        wonTotal = ''
        y = 0
        while is_number(want[x]) == True:
            wonTotal = wonTotal + want[x]
            x = x + 1
            y = y + 1

        IntWonTotal = int(wonTotal)

        lost = ""
        z = 0
        for z in range(0,7):
            lost = lost + want[x]
            x = x + 1 


        lostTotal = ''
        y = 0
        while is_number(want[x]) == True:
            lostTotal = lostTotal + want[x]
            x = x + 1
            y = y + 1

        intLostTotal = int(lostTotal)

        totalUnits = ""
        y = 0
        for y in range(0,14):
            totalUnits = totalUnits + want[x]
            x = x + 1
            y = y + 1

        tu = ''
        y = 0
        while is_number(want[x]) == True or want[x] == '.':
            tu = tu + want[x]
            x = x + 1
            y = y + 1

        intTotalUnits = float(tu)

        ROI = ""
        y = 0
        for y in range(0,6):
            ROI = ROI + want[x]
            x = x + 1
            y = y + 1

        returnOI = ''
        y = 0
        while is_number(want[x]) == True or want[x] == '.' or want[x] == '%':
            returnOI = returnOI + want[x]
            x = x + 1
            y = y + 1

        CLV = ""
        y = 0
        for y in range(0,10):
            CLV = CLV + want[x]
            x = x + 1
            y = y + 1

        avgClv = ''
        y = 0

        while is_number(want[x]) == True or want[x] == '.':    
            avgClv = avgClv + want[x]
            if x  == length-1:
                break
            x = x + 1
            y = y + 1
            


        #print(won)
        #print(IntWonTotal)
        #print(lost)
        #print(intLostTotal)
        #print(totalUnits)
        #print(intTotalUnits)
        #print(ROI)
        #print(returnOI)
        #print(CLV)print(avgClv)

        struct = [returnOI,IntWonTotal,intLostTotal, (IntWonTotal/(IntWonTotal+intLostTotal)),intTotalUnits]
        table[control] = struct
        control = control + 0.1

#################################################

scrapeify(1)
print(table)
